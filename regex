// Passive voice detection
\b((be(en)?)|(w(as|ere))|(is)|(a(er|m)))(.+(en|ed))([\s]|\.)
// courtesy of https://www.regextester.com/99978

// Comparative adjective detection
(more \b.*\b|\w{0,}er|better|less)(?= than))

// Superlative adjective detection
(?<=the )(most \w{0,}|.+?est|best|least)
FP = I live in the west coast

// VCV ending words
(/.*[aiueo][^aiueo][aiueo]$/ig)

// CVC ending words
(/.*[^aiueo][aiueo][^aiueo]$/ig)

//an followed by word with initial vowel letter
(/\b[Aa]n\s[aeiouAEIOU][A-z]*(?=\.|,|:|\?|!|\s)/gm)

//word with three or more vowel letters
\b(?:[b-df-hj-np-tv-z]*?[aeiou][b-df-hj-np-tv-z]*?){3,}\b

//word ending with V followed by word with initial V letter
\w*[aiueo]\s[aiueo]\w*

//activity verbs with and without d/ed/s/es suffixes
\b(act|agree|arrive|ask|bake|bring|build|buy|call|climb|close|come|cry|dance|dream
|drink|eat|enter|exit|fall|fix|give|go|grab|help|hit|hop|insult
|joke|jump|kick|laugh|leave|lift|listen|make|march|move|nod|open|play|push|read
|ride|run|send|shout|sing|sit|smile|spend|stand|talk|think|throw|touch|turn|visit|vote|wait
|walk|write|yell)[d|ed]*[e|es]*\b

//verbs of inert perception and cognition with or without suffixes -ing and -ed
\b(?=(abhor|adore?|astonish|believe?|desire?|detest|dislike?|doubt|feel|forgive?|guess|hate?|hear|imagine?|impress|intend|know|like?|love?|mean|mind|perceive?|please?|prefer|presuppose?|realize?|recall|recognize?|regard|remember|satisfy|see|smell|suppose?|taste?|think|understand|want|wish))[A-z]*(?=(ing|ed))?\b

//Present perfect progressive
^(?=.*(have|has|'ve|'s)*(aleady|just|recently)? been).*ing.*/gm

//Future progressive
((will|'ll)( not)?|won't)( \w+){0,5} be \b[A-Za-z]+ing\b/gi
//FP will be annoying, will be confusing (i.e. participle adjectives)

//extract APA-type citations - author and information prominent
Here's a solution that (i) also splits multiple citations in parantheses (e.g., "(Kok 2017; Peter 2018; etc.)" and (ii) that post-processes the results:

cit <- str_extract_all(samp, "\\([A-Za-z][^)]*\\d{4};|;\\s[A-Za-z][^)]*\\d{4}\\)|\\([A-Za-z][^)]*\\d{4}.*?\\)|\\b[A-Z][a-z].*\\([^A-Za-z)]\\w.*?\\)|\\b[A-Z][a-z].*\\(forthcoming\\)|\\b[A-Z][a-z].*\\(in preparation\\)|\\([A-Za-z][^);]*\\d{4}|(?<=;\\s)[A-Za-z][^);]*\\d{4}")
It sure hasn't gotten less unwieldy but it's efficient:

cit
[[1]]
 [1] "(Norrick 2003)"                            "Partington (2007)"                        
 [3] "McAllister (2015)"                         "(Rühlemann & O’Donnell 2012)"             
 [5] "Author (forthcoming)"                      "Peter & Paul (in preparation)"            
 [7] "(cf. Maynard & Leicher 2007)"              "(Carter et al. 2000: 179)"                
 [9] "(e.g., Partington 2015)"                   "(O’Keeffe 2004)"                          
[11] "(e.g., Rühlemann & O’Donnell 2012: 11-22)" "Abcd & Xyz's (1777)"                      
[13] "Searle’s (1975)"                           "Xyz et al.'s (1999)"                      
[15] "(see also Kok 2017;"                       "Sperber & Wilson 1986" 
Now we can clean the results by removing anything that is not strictly part of the citiation:

cit_clean <- gsub("\\(|\\)|:\\s\\d+(-\\d+)?|(e\\.g\\.,|see also|cf.)\\s|'s|’s|;", "", unlist(cit))
cit_clean
 [1] "Norrick 2003"                "Partington 2007"             "McAllister 2015"            
 [4] "Rühlemann & O’Donnell 2012"  "Author forthcoming"          "Peter & Paul in preparation"
 [7] "Maynard & Leicher 2007"      "Carter et al. 2000"          "Partington 2015"            
[10] "O’Keeffe 2004"               "Rühlemann & O’Donnell 2012"  "Abcd & Xyz 1777"            
[13] "Searle 1975"                 "Xyz et al. 1999"             "Kok 2017"                   
[16] "Sperber & Wilson 1986"
And finally we can remove the duplicates and order the unique results alphabetically:

cit_unique <- sort(unique(cit_clean))
cit_unique
 [1] "Abcd & Xyz 1777"             "Author forthcoming"          "Carter et al. 2000"         
 [4] "Kok 2017"                    "Maynard & Leicher 2007"      "McAllister 2015"            
 [7] "Norrick 2003"                "O’Keeffe 2004"               "Partington 2007"            
[10] "Partington 2015"             "Peter & Paul in preparation" "Rühlemann & O’Donnell 2012" 
[13] "Searle 1975"                 "Sperber & Wilson 1986"       "Xyz et al. 1999"
created by Christoph Ruehlemann

//to extract and create ordered list of citations
### STEP 1: Load manuscript and paste it together into a single character string:
ms <- paste0(ms, collapse = " ")

### STEP 2: define patterns for types of citations:

# pattern 1: match citations completely enclosed in parenthesis, e.g., "(Kok 2017 etc.)"
p_1 <- "\\((Mc|O’)?[A-Za-zé][^)]*\\d{4}\\)"

# pattern 2: match citations where only year etc. is enclosed in parentheses, e.g., "Kok (2017 etc.)"
p_2 <- "(Mc|O’)?[A-Z][a-zé]+\\b\\s\\(\\d{4}(: \\d+)?\\)"

# pattern 3: match citations where name is followed by stuff before parenthesis, e.g., "Kok et al.'s (2017: 1-12)"
p_3 <- "(Mc|O’)?[A-Z][a-zé]+(\\set al\\.)?(’s)?\\s\\(\\d{4}(: \\d+)?\\)"

# pattern 4: match citations with 2 names before parentheses, e.g., "Kok & Kik's (2017: 1-12)"
p_4 <- "(Mc|O’)?[A-Z][a-zé]+\\b\\s&\\s(Mc|O’)?[A-Z][a-zé]+\\b(’s)?\\s\\(\\d{4}(: \\d+)?\\)"

# pattern 5: match  citations with 2 names enclosed in parentheses, e.g., "(Kok & Kik 2017: 1-12)"
p_5 <- "\\((Mc|O’)?[A-Z][a-zé]+\\b\\s&\\s(Mc|O’)?[A-Z][a-zé]+\\b\\s\\d{4}(: \\d+)?\\)"

# pattern 6: match citations enclosed in parentheses and preceded by stuff,  e.g., "(e.g., Kok & Kik 2017: 1-12)"
p_6 <- "\\((cf\\.\\s|e\\.g\\.,\\s)?(Mc|O’)?[A-Z][a-zé]+(\\set al\\.)?\\s\\d{4}(: \\d+)?\\)"

# pattern 7: match multi-citations in parentheses, "(cf. Kik & Kok’s 2018; Pit 2008; 23; Joe 2017)"
p_7 <- "\\((cf\\.|e\\.g\\.,\\s)?(Mc|O’)?[A-Z][a-z][^)]*\\d{4}(: \\d+)?;(\\scf\\. also)?\\s(Mc|O’)?[A-Z][a-z][^)]*\\d{4}(: \\d+)?\\)"

# pattern 8: match citations in square brackets, e.g., "(but see Kik & Kok’s [2018]; cf. also [Pet 2008: 23])"
p_8 <- "(Mc|O’)?[A-Z][a-zé]+\\b\\s&\\s(Mc|O’)?[A-Z][a-zé]+\\b(’s)?\\s\\[\\d{4}(: \\d+)?\\]|\\[(Mc|O’)?[A-Z][a-zé]+\\b\\s\\d{4}(: \\d+)?\\]"


### STEP 3: combine patterns and apply them to manuscript:
# combine:
allpatterns <- paste(c(p_step1,p_step2,p_step3,p_step4,p_step5,p_step6,p_step7, p_step8), collapse="|")

# extract using `str_extract`:
str_extract_all(ms, allpatterns)

### STEP 4: post-process result
# save:
cit <- str_extract_all(ms, allpatterns)

# split multi-citations, eg, "(A 2000; B 1999; ...)":
cit_split <- unlist(str_split(unlist(cit), ";\\s"))

# clean up:
cit_clean <- gsub("\\(|\\)|\\[|\\]|:\\s\\d+(-\\d+)?|(e\\.g\\.,|see also|cf.(\\salso)?)\\s|'s|’s|;", "", cit_split)

# order unique citations alphabetically :
cit_unique <- sort(unique(cit_clean))
